/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication33;
import javax.swing.*;
import java.math.BigInteger;
import java.awt.event.*;
/**
 *
 * @author Sarabusab
 */
public class Stirling extends javax.swing.JFrame {

    /**
     * Creates new form Stirling
     */
    public Stirling() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel7.setFont(new java.awt.Font("Papyrus", 0, 14)); // NOI18N
        jLabel7.setText("Note:  Same Formula Syntax, Alternative Method");

        jLabel2.setFont(new java.awt.Font("Papyrus", 0, 36)); // NOI18N
        jLabel2.setText("Stirling of the Second Case");

        jLabel13.setFont(new java.awt.Font("Papyrus", 0, 24)); // NOI18N
        jLabel13.setText("Enter n:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Papyrus", 0, 24)); // NOI18N
        jLabel14.setText("Enter k:");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Papyrus", 0, 10)); // NOI18N
        jButton1.setText("COMPUTE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Papyrus", 0, 11)); // NOI18N
        jButton3.setText("BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Papyrus", 0, 36)); // NOI18N
        jLabel8.setText("Formula:");

        jLabel9.setFont(new java.awt.Font("Papyrus", 0, 24)); // NOI18N
        jLabel9.setText("S(n, k) = k * S(n-1, k) + S(n-1, k-1)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(386, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(jTextField2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(83, 83, 83))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(0, 62, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

        // ERROR HANDLING (CANNOT TYPE IF INPUT WAS A CHARACTER)

        // DECLARATIONS
        char c = evt.getKeyChar();

        //PROCESS
        if (!(Character.isDigit(c)))
        {
            jTextField1.setEditable(false);         // IF CHARACTER AND SPECIAL CHARACTERS DETECTED, CANNOT TYPE
        }

        if ((Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))
        {
            jTextField1.setEditable(true);          // IF INTEGER AND BACKSPACE DETECTED, THEY'RE ALLOWED TO INTERACT WITH THE JTEXTFIELD
        }
        
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        
        // INPUT LIMITER
        if(jTextField1.getText().length()>=3) {
            evt.consume();
        }
        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed

        // ERROR HANDLING (CANNOT TYPE IF INPUT WAS A STRING)

        // DECLARATIONS
        char c = evt.getKeyChar();

        //PROCESS
        if (!(Character.isDigit(c)))
        {
            jTextField2.setEditable(false);         // IF STRING DETECTED, CANNOT TYPE
        }

        if ((Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))
        {
            jTextField2.setEditable(true);          // IF INTEGER AND BACKSPACE DETECTED, THEY'RE ALLOWED TO INTERACT WITH THE JTEXTFIELD
        }
        
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        
        // INPUT LIMITER
        if(jTextField2.getText().length()>=3) {
            evt.consume();
        }
        
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // ERROR HANDLING (IF NO INPUT WERE TYPED)
        if (jTextField1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "First Number: No input detected.");
        } else if (jTextField2.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Second Number: No input detected.");
        } else {

            // DECLARATION
            int inputuser = Integer.parseInt(jTextField1.getText());    // GET INPUT
            int inputuserr = Integer.parseInt(jTextField2.getText());   // GET INPUT

            if (inputuser > 500){
                JOptionPane.showMessageDialog(null, "First Input Limit Exceeded. Enter numbers ranging 1-500.");
            } else if (inputuserr > 500){
                JOptionPane.showMessageDialog(null, "Second Input Limit Exceeded. Enter numbers ranging 1-500.");
            } else {

                // ERROR HANDLING (K is greater than N)
                if (inputuser < inputuserr){
                    JOptionPane.showMessageDialog(null, "No Value of N should be greater than K.");
                } else if (inputuserr == 0){
                    JOptionPane.showMessageDialog(null, "K should be greater than 0.");
                } else {
                    
                    // START PROCESS
                    Process(inputuser, inputuserr);
                }
                }
        }
    }
        
        public void Process(long var, long varr){
            BigInteger outputstirling = countStirling(var, varr);
            jLabel9.setText("S(" + var +"," + varr + ") = " + varr + "* S(" + var + "-1," + varr + ") + S(" + var + "-1, " + varr +" -1)");
            JOptionPane.showMessageDialog(null, "Stirling Number of the Second Case: " + outputstirling);
            jLabel9.setText("S(n, k) = k * S(n-1, k) + S(n-1, k-1)");
        }
        
        public static BigInteger countStirling(long n, long k){ 
       
        BigInteger zz = BigInteger.valueOf(0);
        BigInteger oo = BigInteger.valueOf(1);
        
        
        if (n == 0 || k == 0 || k > n) 
           return zz; 
        if (k == 1 || k == n) 
           return oo; 

        BigInteger multi, sub, subb, addon;


        BigInteger getval = BigInteger.valueOf(n);               // CONVERT LONG N --> BIGINT GETVAL
        sub = getval.subtract(oo);                               // n - 1
        long nn = sub.longValue();                               // CONVERTION BIGINT TO LONG

        BigInteger getvall = BigInteger.valueOf(k);              // CONVERT LONG K --> BIGINT GETVALL
        multi = getvall.multiply(countStirling(nn, k));          // k * countP(n-1, k)

        subb = getvall.subtract(oo);                             // k - 1
        long nnn = subb.longValue();                             // CONVERTION BIGINT TO LONG

        addon = multi.add(countStirling(nn, nnn));               // k * countP(n-1,k) + count(n-1, k-1)
            
        System.out.println(addon);
            return addon;
        }
        
        {
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        // TRANSFER WINDOW
        dispose();
        Selector back = new Selector();
        back.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stirling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stirling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stirling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stirling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stirling().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
